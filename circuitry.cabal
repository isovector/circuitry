cabal-version: 1.12

-- This file has been generated from package.yaml by hpack version 0.34.4.
--
-- see: https://github.com/sol/hpack
--
-- hash: 5b29d1475a6ed3ebe31689f01df0a41251ac8969a3d83fd6f406485a48c0bd47

name:           circuitry
version:        0.1.0.0
category:       Graphics
author:         Sandy Maguire
maintainer:     sandy@sandymaguire.me
license:        MIT
license-file:   LICENSE
build-type:     Simple

library
  exposed-modules:
      Circuitry.Category
      Circuitry.Circuit
      Circuitry.Coproduct
      Circuitry.Embed
      Circuitry.Graph
      Circuitry.Instances
      Circuitry.Machinery
      Circuitry.Numeric
      Circuitry.Primitives
      Circuitry.Product
      Circuitry.Shared
      Circuitry.Signal
      Circuitry.Sing
      Circuitry.Word
  hs-source-dirs:
      src
  default-extensions:
      EmptyCase
      PostfixOperators
      TupleSections
      NamedFieldPuns
      BangPatterns
      BinaryLiterals
      HexFloatLiterals
      NumericUnderscores
      GADTSyntax
      RankNTypes
      TypeApplications
      PolyKinds
      ExistentialQuantification
      TypeOperators
      ConstraintKinds
      ExplicitForAll
      KindSignatures
      NamedWildCards
      ScopedTypeVariables
      FlexibleContexts
      FlexibleInstances
      MultiParamTypeClasses
      ConstrainedClassMethods
      InstanceSigs
      TypeSynonymInstances
      DeriveDataTypeable
      DeriveFoldable
      DeriveFunctor
      DeriveTraversable
      StandaloneDeriving
      EmptyDataDeriving
      DeriveLift
      GeneralisedNewtypeDeriving
      DeriveGeneric
      DerivingStrategies
      DerivingVia
      NumDecimals
      ViewPatterns
      PatternSynonyms
      TypeFamilies
      DeriveAnyClass
      NoStarIsType
      DataKinds
      DefaultSignatures
      TypeApplications
      LambdaCase
      OverloadedLabels
      InstanceSigs
      RoleAnnotations
      NoMonomorphismRestriction
  ghc-options: -Wall -fplugin GHC.TypeLits.Extra.Solver -fplugin GHC.TypeLits.KnownNat.Solver -fplugin GHC.TypeLits.Normalise
  build-depends:
      QuickCheck
    , aeson
    , base
    , bytestring
    , circus
    , clash-prelude
    , containers
    , generic-arbitrary
    , generic-lens
    , ghc-typelits-extra
    , ghc-typelits-knownnat
    , ghc-typelits-natnormalise
    , hspec
    , lens
    , mtl
    , process
    , profunctors
    , syb
    , text
  default-language: Haskell2010

test-suite test
  type: exitcode-stdio-1.0
  main-is: Main.hs
  other-modules:
      CoproductSpec
      EmbedSpec
      MiscSpec
      ProductSpec
      TribufSpec
      Paths_circuitry
  hs-source-dirs:
      test
  default-extensions:
      EmptyCase
      PostfixOperators
      TupleSections
      NamedFieldPuns
      BangPatterns
      BinaryLiterals
      HexFloatLiterals
      NumericUnderscores
      GADTSyntax
      RankNTypes
      TypeApplications
      PolyKinds
      ExistentialQuantification
      TypeOperators
      ConstraintKinds
      ExplicitForAll
      KindSignatures
      NamedWildCards
      ScopedTypeVariables
      FlexibleContexts
      FlexibleInstances
      MultiParamTypeClasses
      ConstrainedClassMethods
      InstanceSigs
      TypeSynonymInstances
      DeriveDataTypeable
      DeriveFoldable
      DeriveFunctor
      DeriveTraversable
      StandaloneDeriving
      EmptyDataDeriving
      DeriveLift
      GeneralisedNewtypeDeriving
      DeriveGeneric
      DerivingStrategies
      DerivingVia
      NumDecimals
      ViewPatterns
      PatternSynonyms
      TypeFamilies
      DeriveAnyClass
      NoStarIsType
      DataKinds
      DefaultSignatures
      TypeApplications
      LambdaCase
      OverloadedLabels
      InstanceSigs
      RoleAnnotations
      NoMonomorphismRestriction
  ghc-options: -Wall -fplugin GHC.TypeLits.Extra.Solver -fplugin GHC.TypeLits.KnownNat.Solver -fplugin GHC.TypeLits.Normalise -threaded -rtsopts -with-rtsopts=-N -O2 -flate-specialise
  build-tool-depends:
      hspec-discover:hspec-discover >=2.0
  build-depends:
      QuickCheck
    , aeson
    , base
    , bytestring
    , circuitry
    , circus
    , clash-prelude
    , containers
    , generic-arbitrary
    , generic-lens
    , ghc-typelits-extra
    , ghc-typelits-knownnat
    , ghc-typelits-natnormalise
    , hspec
    , lens
    , mtl
    , process
    , profunctors
    , syb
    , text
  default-language: Haskell2010
