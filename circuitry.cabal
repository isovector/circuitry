cabal-version: 1.12

-- This file has been generated from package.yaml by hpack version 0.34.4.
--
-- see: https://github.com/sol/hpack
--
-- hash: 6fd6339813020a796642c2cb44bb9a3c5d2d3d8cb6d8625c2e9d28de11a0f66c

name:           circuitry
version:        0.1.0.0
category:       Graphics
author:         Sandy Maguire
maintainer:     sandy@sandymaguire.me
license:        MIT
license-file:   LICENSE
build-type:     Simple

executable circuitry
  main-is: Take2.hs
  other-modules:
      Circuitry.Catalyst
      Circuitry.Category
      Circuitry.GraphViz
      Take2.Circuit
      Take2.Computer.Addressed
      Take2.Computer.Examples
      Take2.Computer.Math
      Take2.Computer.Memory
      Take2.Computer.Simple
      Take2.Embed
      Take2.Graph
      Take2.Instances
      Take2.Machinery
      Take2.Numeric
      Take2.Primitives
      Take2.Word
      Paths_circuitry
  hs-source-dirs:
      src
  default-extensions:
      EmptyCase
      PostfixOperators
      TupleSections
      NamedFieldPuns
      BangPatterns
      BinaryLiterals
      HexFloatLiterals
      NumericUnderscores
      GADTSyntax
      RankNTypes
      TypeApplications
      PolyKinds
      ExistentialQuantification
      TypeOperators
      ConstraintKinds
      ExplicitForAll
      KindSignatures
      NamedWildCards
      ScopedTypeVariables
      FlexibleContexts
      FlexibleInstances
      MultiParamTypeClasses
      ConstrainedClassMethods
      InstanceSigs
      TypeSynonymInstances
      DeriveDataTypeable
      DeriveFoldable
      DeriveFunctor
      DeriveTraversable
      StandaloneDeriving
      EmptyDataDeriving
      DeriveLift
      GeneralisedNewtypeDeriving
      DeriveGeneric
      DerivingStrategies
      DerivingVia
      NumDecimals
      ViewPatterns
      PatternSynonyms
      TypeFamilies
      DeriveAnyClass
      NoStarIsType
      DataKinds
      DefaultSignatures
      TypeApplications
      LambdaCase
      OverloadedLabels
      InstanceSigs
      RoleAnnotations
  ghc-options: -Wall -fplugin GHC.TypeLits.Extra.Solver -fplugin GHC.TypeLits.KnownNat.Solver -fplugin GHC.TypeLits.Normalise -threaded -rtsopts -with-rtsopts=-N -O2 -flate-specialise -fspecialise-aggressively
  build-depends:
      MemoTrie
    , QuickCheck
    , aeson
    , base
    , base64-bytestring
    , bytestring
    , catalyst
    , checkers
    , cirtography
    , clash-prelude
    , containers
    , diagrams
    , diagrams-contrib
    , diagrams-core
    , diagrams-lib
    , diagrams-svg
    , generic-lens
    , ghc-typelits-extra
    , ghc-typelits-knownnat
    , ghc-typelits-natnormalise
    , hashable
    , lattices
    , lens
    , mtl
    , profunctors
    , recover-rtti
    , string-conv
    , svg-builder
    , syb
    , text
    , transformers
  default-language: Haskell2010
