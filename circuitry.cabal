cabal-version: 1.12

-- This file has been generated from package.yaml by hpack version 0.34.4.
--
-- see: https://github.com/sol/hpack
--
-- hash: be0f1812d36dd8d8fbd34c5ff906217939f4c755500dc2352ed6f48f41b8900e

name:           circuitry
version:        0.1.0.0
category:       Graphics
author:         Sandy Maguire
maintainer:     sandy@sandymaguire.me
license:        MIT
license-file:   LICENSE
build-type:     Simple

library
  exposed-modules:
      Circuitry.Category
      Take2
      Take2.Circuit
      Take2.Computer.Addressed
      Take2.Computer.Examples
      Take2.Computer.Math
      Take2.Computer.Memory
      Take2.Computer.Register
      Take2.Computer.Simple
      Take2.Embed
      Take2.Graph
      Take2.Instances
      Take2.Machinery
      Take2.Numeric
      Take2.Primitives
      Take2.Product
      Take2.Signal
      Take2.Word
  hs-source-dirs:
      src
  default-extensions:
      EmptyCase
      PostfixOperators
      TupleSections
      NamedFieldPuns
      BangPatterns
      BinaryLiterals
      HexFloatLiterals
      NumericUnderscores
      GADTSyntax
      RankNTypes
      TypeApplications
      PolyKinds
      ExistentialQuantification
      TypeOperators
      ConstraintKinds
      ExplicitForAll
      KindSignatures
      NamedWildCards
      ScopedTypeVariables
      FlexibleContexts
      FlexibleInstances
      MultiParamTypeClasses
      ConstrainedClassMethods
      InstanceSigs
      TypeSynonymInstances
      DeriveDataTypeable
      DeriveFoldable
      DeriveFunctor
      DeriveTraversable
      StandaloneDeriving
      EmptyDataDeriving
      DeriveLift
      GeneralisedNewtypeDeriving
      DeriveGeneric
      DerivingStrategies
      DerivingVia
      NumDecimals
      ViewPatterns
      PatternSynonyms
      TypeFamilies
      DeriveAnyClass
      NoStarIsType
      DataKinds
      DefaultSignatures
      TypeApplications
      LambdaCase
      OverloadedLabels
      InstanceSigs
      RoleAnnotations
  ghc-options: -Wall -fplugin GHC.TypeLits.Extra.Solver -fplugin GHC.TypeLits.KnownNat.Solver -fplugin GHC.TypeLits.Normalise
  build-depends:
      QuickCheck
    , aeson
    , base
    , bytestring
    , cirtography
    , clash-prelude
    , containers
    , generic-lens
    , ghc-typelits-extra
    , ghc-typelits-knownnat
    , ghc-typelits-natnormalise
    , hspec
    , lens
    , mtl
    , profunctors
    , syb
    , text
  default-language: Haskell2010

test-suite test
  type: exitcode-stdio-1.0
  main-is: Main.hs
  other-modules:
      MemSpec
      MiscSpec
      ProductSpec
      RegisterSpec
      TribufSpec
      Paths_circuitry
  hs-source-dirs:
      test
  default-extensions:
      EmptyCase
      PostfixOperators
      TupleSections
      NamedFieldPuns
      BangPatterns
      BinaryLiterals
      HexFloatLiterals
      NumericUnderscores
      GADTSyntax
      RankNTypes
      TypeApplications
      PolyKinds
      ExistentialQuantification
      TypeOperators
      ConstraintKinds
      ExplicitForAll
      KindSignatures
      NamedWildCards
      ScopedTypeVariables
      FlexibleContexts
      FlexibleInstances
      MultiParamTypeClasses
      ConstrainedClassMethods
      InstanceSigs
      TypeSynonymInstances
      DeriveDataTypeable
      DeriveFoldable
      DeriveFunctor
      DeriveTraversable
      StandaloneDeriving
      EmptyDataDeriving
      DeriveLift
      GeneralisedNewtypeDeriving
      DeriveGeneric
      DerivingStrategies
      DerivingVia
      NumDecimals
      ViewPatterns
      PatternSynonyms
      TypeFamilies
      DeriveAnyClass
      NoStarIsType
      DataKinds
      DefaultSignatures
      TypeApplications
      LambdaCase
      OverloadedLabels
      InstanceSigs
      RoleAnnotations
  ghc-options: -Wall -fplugin GHC.TypeLits.Extra.Solver -fplugin GHC.TypeLits.KnownNat.Solver -fplugin GHC.TypeLits.Normalise -threaded -rtsopts -with-rtsopts=-N -O2 -flate-specialise
  build-tool-depends:
      hspec-discover:hspec-discover >=2.0
  build-depends:
      QuickCheck
    , aeson
    , base
    , bytestring
    , circuitry
    , cirtography
    , clash-prelude
    , containers
    , generic-lens
    , ghc-typelits-extra
    , ghc-typelits-knownnat
    , ghc-typelits-natnormalise
    , hspec
    , lens
    , mtl
    , profunctors
    , syb
    , text
  default-language: Haskell2010
